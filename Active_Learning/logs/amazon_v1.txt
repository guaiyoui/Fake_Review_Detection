nohup: ignoring input
(0.75, 0.7333333333333334)
(0.8, 0.6666666666666666, 1.0)
(0.75, 0.75, 0.75)
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[    0,     0,     0,  ..., 16676, 16676, 16676],
                       [    1,     2,     3,  ..., 16673, 16674, 16675]]),
       values=tensor([0.0009, 0.0009, 0.0009,  ..., 0.0116, 0.0116, 0.0116]),
       device='cuda:0', size=(16677, 16677), nnz=9005656,
       layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 6.8966e-02, 7.1024e-02,
         8.2219e-01],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 7.2464e-02, 7.0725e-02,
         8.4524e-01],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 7.9646e-02, 5.8153e-02,
         8.5975e-01],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 2.2727e-01, 4.6209e-02,
         8.7654e-01],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 3.7037e-02, 5.9044e-02,
         8.9359e-01],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 2.2727e-01, 1.2836e-03,
         8.7665e-01]], device='cuda:0'), torch.Size([9424, 10]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
in_feat: 10, out_feat: 16
in_feat: 16, out_feat: 2
len(idx_non_test): 314
Traceback (most recent call last):
  File "run_baselines.py", line 478, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 294, in run
    model, acc_val, micro_val, macro_val, train_time, f1_val, recall_val, precision_val = train_GCN(model, self.adj, selected_nodes, idx_val, self.features,
  File "run_baselines.py", line 95, in train_GCN
    output = model(features, adj)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 86, in forward
    x = self.gc1(x, adj)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 71, in forward
    output = torch.spmm(adj, support)
RuntimeError: addmm: Argument #3 (dense): Expected dim 0 size 16677, got 9424
nohup: ignoring input
(0.75, 0.7333333333333334)
(0.8, 0.6666666666666666, 1.0)
(0.75, 0.75, 0.75)
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 6.8966e-02, 7.1024e-02,
         8.2219e-01],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 7.2464e-02, 7.0725e-02,
         8.4524e-01],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 7.9646e-02, 5.8153e-02,
         8.5975e-01],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 2.2727e-01, 4.6209e-02,
         8.7654e-01],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 3.7037e-02, 5.9044e-02,
         8.9359e-01],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 2.2727e-01, 1.2836e-03,
         8.7665e-01]], device='cuda:0'), torch.Size([9424, 10]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
in_feat: 10, out_feat: 16
in_feat: 16, out_feat: 2
len(idx_non_test): 314
acc_val: 0.85
-------------initial results------------
micro_val: 0.8500, macro_val: 0.4595
strategy:  uncertainty
acc_val: 0.97
the number of labels is 10
acc_val: 0.93
the number of labels is 20
acc_val: 0.93
the number of labels is 30
acc_val: 0.93
the number of labels is 40
acc_val: 0.93
the number of labels is 50
acc_val: 0.93
the number of labels is 60
acc_val: 0.93
the number of labels is 70
acc_val: 0.93
the number of labels is 80
acc_val: 0.93
the number of labels is 90
acc_val: 0.93
the number of labels is 100
acc_val: 0.93
the number of labels is 110
acc_val: 0.93
the number of labels is 120
acc_val: 0.93
the number of labels is 130
acc_val: 0.93
the number of labels is 140
acc_val: 0.93
the number of labels is 150
acc_val: 0.93
the number of labels is 160
acc_val: 0.93
the number of labels is 170
acc_val: 0.93
the number of labels is 180
acc_val: 0.93
the number of labels is 190
acc_val: 0.93
the number of labels is 200
acc_val: 0.93
the number of labels is 210
acc_val: 0.93
the number of labels is 220
acc_val: 0.93
the number of labels is 230
acc_val: 0.93
the number of labels is 240
epoch: 110, acc_val: 0.97, best_acc_val: 0.98
acc_val: 0.98
the number of labels is 250
AL Time: 0.10793469846248627s
current seed is 8925
len(idx_non_test) is 419
in_feat: 10, out_feat: 16
in_feat: 16, out_feat: 2
len(idx_non_test): 314
acc_val: 0.86
-------------initial results------------
micro_val: 0.8600, macro_val: 0.4624
strategy:  uncertainty
acc_val: 0.86
the number of labels is 10
acc_val: 0.86
the number of labels is 20
acc_val: 0.86
the number of labels is 30
acc_val: 0.86
the number of labels is 40
acc_val: 0.86
the number of labels is 50
acc_val: 0.86
the number of labels is 60
acc_val: 0.86
the number of labels is 70
acc_val: 0.86
the number of labels is 80
acc_val: 0.86
the number of labels is 90
acc_val: 0.86
the number of labels is 100
acc_val: 0.86
the number of labels is 110
acc_val: 0.86
the number of labels is 120
acc_val: 0.86
the number of labels is 130
acc_val: 0.86
the number of labels is 140
acc_val: 0.86
the number of labels is 150
acc_val: 0.86
the number of labels is 160
acc_val: 0.86
the number of labels is 170
acc_val: 0.86
the number of labels is 180
acc_val: 0.86
the number of labels is 190
acc_val: 0.86
the number of labels is 200
acc_val: 0.86
the number of labels is 210
acc_val: 0.86
the number of labels is 220
acc_val: 0.86
the number of labels is 230
acc_val: 0.86
the number of labels is 240
acc_val: 0.92
the number of labels is 250
AL Time: 0.041169049218297005s
current seed is 27596
len(idx_non_test) is 419
in_feat: 10, out_feat: 16
in_feat: 16, out_feat: 2
len(idx_non_test): 314
acc_val: 0.85
-------------initial results------------
micro_val: 0.8500, macro_val: 0.4595
strategy:  uncertainty
acc_val: 0.97
the number of labels is 10
acc_val: 0.93
the number of labels is 20
acc_val: 0.93
the number of labels is 30
acc_val: 0.93
the number of labels is 40
acc_val: 0.93
the number of labels is 50
acc_val: 0.93
the number of labels is 60
acc_val: 0.93
the number of labels is 70
acc_val: 0.93
the number of labels is 80
acc_val: 0.93
the number of labels is 90
acc_val: 0.93
the number of labels is 100
acc_val: 0.93
the number of labels is 110
acc_val: 0.93
the number of labels is 120
acc_val: 0.93
the number of labels is 130
acc_val: 0.93
the number of labels is 140
acc_val: 0.93
the number of labels is 150
acc_val: 0.93
the number of labels is 160
acc_val: 0.93
the number of labels is 170
acc_val: 0.93
the number of labels is 180
acc_val: 0.93
the number of labels is 190
acc_val: 0.93
the number of labels is 200
acc_val: 0.93
the number of labels is 210
acc_val: 0.93
the number of labels is 220
acc_val: 0.93
the number of labels is 230
acc_val: 0.93
the number of labels is 240
epoch: 110, acc_val: 0.97, best_acc_val: 0.98
acc_val: 0.98
the number of labels is 250
AL Time: 0.043427811935544014s
current seed is 8925
len(idx_non_test) is 419
in_feat: 10, out_feat: 16
in_feat: 16, out_feat: 2
len(idx_non_test): 314
acc_val: 0.86
-------------initial results------------
micro_val: 0.8600, macro_val: 0.4624
strategy:  uncertainty
acc_val: 0.86
the number of labels is 10
acc_val: 0.86
the number of labels is 20
acc_val: 0.86
the number of labels is 30
acc_val: 0.86
the number of labels is 40
acc_val: 0.86
the number of labels is 50
acc_val: 0.86
the number of labels is 60
acc_val: 0.86
the number of labels is 70
acc_val: 0.86
the number of labels is 80
acc_val: 0.86
the number of labels is 90
acc_val: 0.86
the number of labels is 100
acc_val: 0.86
the number of labels is 110
acc_val: 0.86
the number of labels is 120
acc_val: 0.86
the number of labels is 130
acc_val: 0.86
the number of labels is 140
acc_val: 0.86
the number of labels is 150
acc_val: 0.86
the number of labels is 160
acc_val: 0.86
the number of labels is 170
acc_val: 0.86
the number of labels is 180
acc_val: 0.86
the number of labels is 190
acc_val: 0.86
the number of labels is 200
acc_val: 0.86
the number of labels is 210
acc_val: 0.86
the number of labels is 220
acc_val: 0.86
the number of labels is 230
acc_val: 0.86
the number of labels is 240
acc_val: 0.92
the number of labels is 250
AL Time: 0.04239652492105961s
nohup: ignoring input
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
Traceback (most recent call last):
  File "run_baselines.py", line 482, in <module>
    wrapper = run_wrapper(args.dataset, args.normalization, args.cuda)
  File "run_baselines.py", line 183, in __init__
    graph_data = np.loadtxt(args.data_path+"J01Network.txt", delimiter=' ', dtype=int)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/numpy/lib/npyio.py", line 1356, in loadtxt
    arr = _read(fname, dtype=dtype, comment=comment, delimiter=delimiter,
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/numpy/lib/npyio.py", line 975, in _read
    fh = np.lib._datasource.open(fname, 'rt', encoding=encoding)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/numpy/lib/_datasource.py", line 193, in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/numpy/lib/_datasource.py", line 533, in open
    raise FileNotFoundError(f"{path} not found.")
FileNotFoundError: ../Spammer-ISR-Initial-Exp/ISR-spammer-detection/Amazon_Data/J01Network.txt not found.
nohup: ignoring input
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:64: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at ../aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  src = src.to_sparse_csr()
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 6.8966e-02, 7.1024e-02,
         8.2219e-01],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 7.2464e-02, 7.0725e-02,
         8.4524e-01],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 7.9646e-02, 5.8153e-02,
         8.5975e-01],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 2.2727e-01, 4.6209e-02,
         8.7654e-01],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 3.7037e-02, 5.9044e-02,
         8.9359e-01],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 2.2727e-01, 1.2836e-03,
         8.7665e-01]], device='cuda:0'), torch.Size([9424, 10]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
epoch: 140, acc_val: 0.8, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
-------------initial results------------
micro_val: 1.0000, macro_val: 1.0000
strategy:  uncertainty
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.7416058394160583
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.765266106442577
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8027941966684579
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8294531672983216
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8194373401534526
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8335941575378195
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8345549738219896
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8374281233664401
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8360995850622407
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8446088794926004
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8425443169968717
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8480677607199577
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8449816079873883
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8508170795993675
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8530503978779842
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8583554376657824
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8513089005235603
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8562266167824694
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.853850183342064
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8475103734439834
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8544203282159872
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8553326293558607
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8485169491525424
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8559366754617415
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8465266558966074
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8443972384492829
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8442796610169492
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8491265219692959
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8459086078639745
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8352
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8373333333333334
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8411609498680739
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8359456635318705
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8344577062791906
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8204301075268817
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8233387358184765
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8257655755015839
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8139922265408107
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8277689454160043
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8017429193899783
AL Time: 0.19084798358380795s
current seed is 8925
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
-------------initial results------------
micro_val: 0.9000, macro_val: 0.4737
strategy:  uncertainty
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8094777562862668
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7791353383458646
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8090865152247462
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8163466272772033
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8346613545816732
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8314238952536825
epoch: 290, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8414308595835557
epoch: 290, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.838024429102496
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8406537282941776
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 0.0
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
f1_test_my: 0.8505864354920958
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8429667519181586
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8480417754569191
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8474923234390993
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8456444218033622
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8367768595041323
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8410732714138287
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8375713544369487
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8234007654455988
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8454688318491356
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8440463645943098
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8405951115834219
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8296296296296296
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8357894736842105
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8336820083682008
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8268925357331922
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.822778073443321
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8193786203264876
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8273716951788492
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8190981432360743
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8289885297184567
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8158883521202361
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7977777777777777
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8131286394917947
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8041125541125542
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8138154344306529
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8172157279489904
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8167202572347266
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7831392124237382
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7933884297520661
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7879120879120879
AL Time: 0.13590488955378532s
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
epoch: 140, acc_val: 0.8, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
-------------initial results------------
micro_val: 1.0000, macro_val: 1.0000
strategy:  uncertainty
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.7416058394160583
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.765266106442577
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8027941966684579
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.828819068255688
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.822142491030241
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8366492146596858
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8349106203995794
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8366492146596858
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8326446280991736
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8401874023945861
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8395061728395063
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8474752732951588
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8477580813347236
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8496595075955998
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8514435695538058
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8519099947671377
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8495297805642632
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8505263157894736
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8538258575197888
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8455538221528862
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8559322033898304
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8569909622541202
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8497899159663865
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8539915966386554
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8503253796095445
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8447009443861492
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8442796610169492
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8485169491525424
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8439678284182306
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8394666666666666
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
the number of labels is 310
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8419925013390466
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8428874734607218
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.838024429102496
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8360398114195914
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.7959866220735786
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8281417830290011
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8346456692913385
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8299465240641712
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8230231307154383
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8146157979580871
AL Time: 0.13531239330768585s
current seed is 8925
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
-------------initial results------------
micro_val: 0.9000, macro_val: 0.4737
strategy:  uncertainty
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8094777562862668
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7791353383458646
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.808695652173913
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8157248157248158
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8339960238568588
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8332433890987587
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8426395939086295
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.830047948854555
epoch: 200, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8367240479916536
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.849820604818042
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.852324987225345
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.852138073158166
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8537467700258398
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8469022017409114
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.844997407983411
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8459556929417826
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8584807492195629
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8548895899053628
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.855945521215296
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8513800424628449
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8614583333333333
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8490566037735849
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8559670781893004
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8480083857442349
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8408501814411613
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8329853862212944
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8326359832635983
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.805414551607445
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8299681190223167
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8279168886521043
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8336755646817248
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8333333333333334
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8279118572927598
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8190578158458244
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.7938764352104974
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8154825026511134
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8160427807486632
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8221635883905013
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8155236576289208
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8137931034482759
AL Time: 0.13729684241116047s
nohup: ignoring input
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:64: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at ../aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  src = src.to_sparse_csr()
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.724196062560668
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2420e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2420e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2420e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
-------------initial results------------
micro_val: 1.0000, macro_val: 1.0000
strategy:  uncertainty
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8282504012841091
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.803666184273999
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8395313295975548
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.844925296239052
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8455618265777322
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8420523138832998
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8530465949820789
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8540816326530613
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8520225294418843
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.855249745158002
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8518518518518517
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8542199488491048
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8526100307062436
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8558329088130413
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8431077694235589
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8445336008024072
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8532249873031996
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8556858745537991
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8382502543234994
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8463886063072227
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8388074785245073
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8512396694214875
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8608870967741935
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8502316006176016
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8488311688311688
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8488612836438925
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8407835258663987
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8443560417702635
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8427024239298608
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.849896480331263
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8488311688311688
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8370445344129553
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.851413881748072
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8351090816844242
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8371134020618557
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8495934959349593
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8472012102874433
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8632435180477885
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8477822580645161
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8453815261044176
AL Time: 0.17619127221405506s
current seed is 8925
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 0.8
(10,) (10,)
f1_val_my: 0.0
-------------initial results------------
micro_val: 0.8000, macro_val: 0.4444
strategy:  uncertainty
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8203703703703703
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8565795958600296
epoch: 230, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.851554663991976
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8516397709526289
epoch: 130, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.843798650752465
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8527209186220669
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8390000000000001
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8290598290598291
acc_val: 0.9
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
(10,) (10,)
f1_val_my: 0.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8490196078431372
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8377397615344737
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.853719420868697
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8520710059171599
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8269733403031887
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8527667984189723
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8435582822085889
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8512110726643599
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8449573507275464
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8481518481518481
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8545994065281899
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8438818565400845
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.846
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.864920390344119
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8443775100401606
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8358678552700576
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8449573507275464
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8470000000000001
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8439538384345208
epoch: 130, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.853211009174312
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8436873747494991
epoch: 150, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8519454269833249
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8462291870714985
epoch: 190, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8516260162601627
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8460764587525151
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8409999999999999
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8537952114111054
epoch: 270, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.849746192893401
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8500506585612969
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8431077694235589
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8441102756892229
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8361169102296452
AL Time: 0.1347220093011856s
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
-------------initial results------------
micro_val: 1.0000, macro_val: 1.0000
strategy:  uncertainty
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8282504012841091
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.803666184273999
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8446950281906714
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8459958932238193
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8435582822085889
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8389057750759877
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8521560574948666
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8505629477993859
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8468653648509763
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8530465949820789
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8524590163934426
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8487009679062658
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8492590700051098
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.847165991902834
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8468559837728196
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8514344262295082
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8368368368368369
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8501278772378518
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8494845360824743
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.854922279792746
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8558375634517766
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8555152770585189
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8523421588594705
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8612836438923397
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8486377396569122
acc_val: 1.0
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
(10,) (10,)
f1_val_my: 1.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8531102979613172
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8390393459376596
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8454957221942627
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8351983723296034
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8446050593701601
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8509127789046653
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8453815261044176
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8492183560262229
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8472222222222222
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8453815261044176
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8530901722391084
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8417910447761194
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8510421962379257
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8443775100401606
acc_val: 1.0
(10,) (10,)
f1_val_my: 1.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 1.0
f1_test_my: 0.8456510809451987
AL Time: 0.1431802399456501s
current seed is 8925
len(idx_non_test) is 419
len(idx_non_test): 404
acc_val: 0.8
(10,) (10,)
f1_val_my: 0.0
-------------initial results------------
micro_val: 0.8000, macro_val: 0.4444
strategy:  uncertainty
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 10
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8203703703703703
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 20
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8548864758144126
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 30
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8473053892215568
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 40
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8433734939759037
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 50
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8488549618320611
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 60
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8483627204030227
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 70
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8463855421686748
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 80
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.847082494969819
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 90
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8508230452674896
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 100
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8424212106053027
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 110
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8416873449131513
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 120
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8569979716024341
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 130
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8683531233866804
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 140
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8686765457332652
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 150
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8422649140546006
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 160
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.836436839456467
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 170
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8385845855550169
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 180
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.846908734052993
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 190
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8402010050251256
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 200
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8463886063072227
epoch: 280, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 210
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8509162951956414
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 220
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8444222111055527
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 230
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8471528471528471
epoch: 100, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 240
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8372093023255816
epoch: 180, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 250
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8417849898580121
epoch: 280, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 260
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.849122807017544
epoch: 230, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 270
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8421052631578948
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 280
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8340943683409437
epoch: 240, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 290
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8402426693629929
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 300
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8369781312127236
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 310
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8445336008024072
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 320
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8424212106053027
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 330
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8436724565756825
epoch: 260, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 340
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8410360589131539
epoch: 220, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 350
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8448016072325464
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 360
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8431077694235589
epoch: 130, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 370
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8439538384345208
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 380
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8453815261044176
epoch: 110, acc_val: 0.9, best_acc_val: 1.0
acc_val: 1.0
(10,) (10,)
f1_val_my: 0.0
the number of labels is 390
(7955,) (7955,)
f1_val_my: 0.0
f1_test_my: 0.8488843813387423
acc_val: 0.9
(10,) (10,)
f1_val_my: 0.0
the number of labels is 400
(7955,) (7955,)
f1_val_my: 0.0
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
f1_test_my: 0.8417373939091363
AL Time: 0.13035389222204685s
nohup: ignoring input
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.7238630801110563
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2386e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2386e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2386e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
Traceback (most recent call last):
  File "run_baselines.py", line 532, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 333, in run
    model = get_model(args.model, self.features.size(1), 2, args.hidden, args.dropout,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 189, in get_model
    model = GIN(num_features=nfeat,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 167, in __init__
    self.conv1 = GINConv(self.mlp1)
TypeError: __init__() missing 1 required positional argument: 'out_features'
nohup: ignoring input
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.7243508830379324
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2435e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2435e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2435e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
Traceback (most recent call last):
  File "run_baselines.py", line 532, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 333, in run
    model = get_model(args.model, self.features.size(1), 2, args.hidden, args.dropout,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 186, in get_model
    model = GIN(num_features=nfeat,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 166, in __init__
    self.conv1 = GINConv(MLP([num_features, 32]), train_eps=True)
TypeError: __init__() missing 1 required positional argument: 'out_features'
nohup: ignoring input
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.7243214089085241
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2432e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2432e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2432e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
Traceback (most recent call last):
  File "run_baselines.py", line 532, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 333, in run
    model = get_model(args.model, self.features.size(1), 2, args.hidden, args.dropout,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 189, in get_model
    model = GIN(num_features=nfeat,
  File "/data1/jianweiw/LLM/Fake_review_detection/Fake_Review_Detection/Active_Learning/models.py", line 167, in __init__
    self.conv1 = GINConv(self.mlp1, train_eps=True)
TypeError: __init__() missing 1 required positional argument: 'out_features'
nohup: ignoring input
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.7243495130836105
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2435e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2435e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2435e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
Traceback (most recent call last):
  File "run_baselines.py", line 532, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 343, in run
    model, acc_val, micro_val, macro_val, train_time, f1_val, recall_val, precision_val = train_GCN(model, self.adj, selected_nodes, idx_val, self.features,
  File "run_baselines.py", line 96, in train_GCN
    output = model(features, adj)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
TypeError: forward() missing 1 required positional argument: 'batch'
nohup: ignoring input
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:60: UserWarning: Converting sparse tensor to CSR format for more efficient processing. Consider converting your sparse tensor to CSR format beforehand to avoid repeated conversion (got 'torch.sparse_coo')
  warnings.warn(f"Converting sparse tensor to CSR format for more "
/data1/jianweiw/env_conda/imputation/lib/python3.8/site-packages/torch_geometric/utils/_spmm.py:64: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at ../aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  src = src.to_sparse_csr()
(0.25, 0.2)
(4,) (4,)
(0.0, 0.0, 0.0)
(0.25, 0.25, 0.25)
===== 1. The modularity-based feature augmentation. =====
the modularity of community is 0.7243508830379324
===== 2. The k-core-based feature augmentation. =====
self.labels: (tensor([0, 0, 0,  ..., 0, 1, 0], device='cuda:0'), torch.Size([9424]))
self.adj: tensor(indices=tensor([[   8,    8,   21,  ..., 9423, 9423, 9423],
                       [2170, 5213, 1474,  ..., 9418, 9419, 9421]]),
       values=tensor([0.5000, 0.5000, 0.2500,  ..., 0.3333, 0.3333, 0.3333]),
       device='cuda:0', size=(9424, 9424), nnz=181292, layout=torch.sparse_coo)
self.feature: (tensor([[2.9971e-01, 6.0465e-02, 3.8314e-03,  ..., 8.2219e-01, 0.0000e+00,
         0.0000e+00],
        [1.3132e-01, 4.6512e-02, 7.6628e-03,  ..., 8.4524e-01, 0.0000e+00,
         0.0000e+00],
        [3.4525e-01, 4.6512e-02, 2.5543e-03,  ..., 8.5975e-01, 0.0000e+00,
         0.0000e+00],
        ...,
        [0.0000e+00, 0.0000e+00, 1.2771e-03,  ..., 8.7654e-01, 7.2435e-01,
         3.0000e+00],
        [2.6476e-04, 4.6512e-03, 4.7254e-02,  ..., 8.9359e-01, 7.2435e-01,
         6.0000e+00],
        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 8.7665e-01, 7.2435e-01,
         3.0000e+00]], device='cuda:0'), torch.Size([9424, 12]))
self.idx_test is 7955, self.idx_non_test is 419
finished loading dataset
current seed is 27596
len(idx_non_test) is 419
len(idx_non_test): 404
Traceback (most recent call last):
  File "run_baselines.py", line 599, in <module>
    val_dict, test_dict, classes_dict, cur_AL_time = wrapper.run(args.strategy, num_labeled_list=num_labeled_list,
  File "run_baselines.py", line 410, in run
    model, acc_val, micro_val, macro_val, train_time, f1_val, recall_val, precision_val = train_GCN(model, self.adj, selected_nodes, idx_val, self.features,
  File "run_baselines.py", line 166, in train_GCN
    loss_train = loss_function_subgraph_regularization(model, features, adj, train_labels, selected_nodes)
  File "run_baselines.py", line 131, in loss_function_subgraph_regularization
    adj = torch.sparse_coo_tensor(edge_index, torch.ones(edge_index.size(1)), (num_nodes, num_nodes))
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument values in method wrapper_SparseCUDA___sparse_coo_tensor_with_dims_and_tensors)
